import { ConnectButton } from '@rainbow-me/rainbowkit';
import type { NextPage } from 'next';
import Head from 'next/head';
import styles from '../styles/Home.module.css';
import { useEffect, useState } from 'react';
import { useAccount, useContractWrite, useNetwork } from 'wagmi';
import { usePrepareContractWrite } from 'wagmi';
import { ethers } from 'ethers';

const Home: NextPage = () => {

  const [luckyNumber, setLuckyNumber] = useState(Math.floor(Math.random() * 1000));


  
  const { chain } = useNetwork();

  const account = useAccount();

  const lotteryMarketInfo = chain && chain.id === 13370 ? require(`../deployments/${chain.id}/LotteryMarket.json`) : {};

  console.log('has lottery market info?', {
    address: lotteryMarketInfo.address,
    abi: lotteryMarketInfo.abi,
    functionName: 'buy',
    args: [account.address, luckyNumber]
  });

  const buyTicketPrepare = usePrepareContractWrite({
    address: lotteryMarketInfo.address,
    abi: lotteryMarketInfo.abi,
    functionName: 'buy',
    args: [account.address, luckyNumber]
  });

  console.log('result', buyTicketPrepare);

  const drawPrepare = usePrepareContractWrite({
    address: lotteryMarketInfo.address,
    abi: lotteryMarketInfo.abi,
    functionName: 'startDraw',
    args: [ethers.utils.formatEther('100').toString()]
  });

  const buyTicketTxn = useContractWrite(buyTicketPrepare.config);
  const drawTxn = useContractWrite(drawPrepare.config);

  useEffect(() => {
    if (account.isConnected) {
      buyTicketPrepare.refetch();
    }
  }, [lotteryMarketInfo, account.address]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Lottery Market</title>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="description"
        />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <main className={styles.main}>
        <ConnectButton />

        <h1 className={styles.title}>
          Welcome to the Lottery!
        </h1>

        <input type="number" value={luckyNumber} onChange={(ev) => setLuckyNumber(parseInt(ev.target.value))} />

        <button disabled={!buyTicketTxn.write} onClick={() => buyTicketTxn.write!()}>Buy Ticket</button>

        {buyTicketPrepare.isError && <div>Error: {buyTicketPrepare.error!.message}</div>}

        <button disabled={!buyTicketTxn.write} onClick={() => drawTxn.write!()}>Draw</button>
        
        {drawPrepare.isError && <div>Error: {drawPrepare.error!.message}</div>}

      </main>
    </div>
  );
};

export default Home;
