// SPDX-License-Identifier: UNLICENSED
// !! THIS FILE WAS AUTOGENERATED BY abi-to-sol v0.6.6. SEE SOURCE BELOW. !!
pragma solidity ^0.8.4;

interface IOracleManager {


error ImplementationIsSterile( address implementation );
error NoChange(  );
error NotAContract( address contr );
error NotNominated( address addr );
error Unauthorized( address addr );
error UpgradeSimulationFailed(  );
error ZeroAddress(  );
event OwnerChanged( address oldOwner,address newOwner ) ;
event OwnerNominated( address newOwner ) ;
event Upgraded( address indexed self,address implementation ) ;
function acceptOwnership(  ) external   ;
function getImplementation(  ) external view returns (address ) ;
function nominateNewOwner( address newNominatedOwner ) external   ;
function nominatedOwner(  ) external view returns (address ) ;
function owner(  ) external view returns (address ) ;
function renounceNomination(  ) external   ;
function simulateUpgradeTo( address newImplementation ) external   ;
function upgradeTo( address newImplementation ) external   ;
error DeviationToleranceExceeded( int256 deviation );
error IncorrectExternalNodeInterface( address externalNode );
error InvalidNodeDefinition( NodeDefinition.Data nodeType );
error InvalidPrice( int256 price );
error NodeNotRegistered( bytes32 nodeId );
error OverflowInt256ToUint256(  );
error OverflowInt56ToInt24(  );
error OverflowUint256ToInt256(  );
error OverflowUint256ToUint160(  );
error OverflowUint56ToInt56(  );
error StalenessToleranceExceeded(  );
error UnprocessableNode( bytes32 nodeId );
error UnsupportedOperation( uint8 operation );
event NodeRegistered( bytes32 nodeId,uint8 nodeType,bytes parameters,bytes32[] parents ) ;
function getNode( bytes32 nodeId ) external pure returns (NodeDefinition.Data memory ) ;
function getNodeId( uint8 nodeType,bytes memory parameters,bytes32[] memory parents ) external pure returns (bytes32 ) ;
function process( bytes32 nodeId ) external view returns (NodeOutput.Data memory ) ;
function registerNode( uint8 nodeType,bytes memory parameters,bytes32[] memory parents ) external  returns (bytes32 ) ;
}

interface NodeDefinition {
struct Data { uint8 nodeType;
bytes parameters;
bytes32[] parents; }
}

interface NodeOutput {
struct Data { int256 price;
uint256 timestamp;
uint256 __slotAvailableForFutureUse1;
uint256 __slotAvailableForFutureUse2; }
}


// THIS FILE WAS AUTOGENERATED FROM THE FOLLOWING ABI JSON:
/*
[{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ImplementationIsSterile","type":"error"},{"inputs":[],"name":"NoChange","type":"error"},{"inputs":[{"internalType":"address","name":"contr","type":"address"}],"name":"NotAContract","type":"error"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"NotNominated","type":"error"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"Unauthorized","type":"error"},{"inputs":[],"name":"UpgradeSimulationFailed","type":"error"},{"inputs":[],"name":"ZeroAddress","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"oldOwner","type":"address"},{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerNominated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"self","type":"address"},{"indexed":false,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newNominatedOwner","type":"address"}],"name":"nominateNewOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"nominatedOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceNomination","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"simulateUpgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int256","name":"deviation","type":"int256"}],"name":"DeviationToleranceExceeded","type":"error"},{"inputs":[{"internalType":"address","name":"externalNode","type":"address"}],"name":"IncorrectExternalNodeInterface","type":"error"},{"inputs":[{"components":[{"internalType":"enum NodeDefinition.NodeType","name":"nodeType","type":"uint8"},{"internalType":"bytes","name":"parameters","type":"bytes"},{"internalType":"bytes32[]","name":"parents","type":"bytes32[]"}],"internalType":"struct NodeDefinition.Data","name":"nodeType","type":"tuple"}],"name":"InvalidNodeDefinition","type":"error"},{"inputs":[{"internalType":"int256","name":"price","type":"int256"}],"name":"InvalidPrice","type":"error"},{"inputs":[{"internalType":"bytes32","name":"nodeId","type":"bytes32"}],"name":"NodeNotRegistered","type":"error"},{"inputs":[],"name":"OverflowInt256ToUint256","type":"error"},{"inputs":[],"name":"OverflowInt56ToInt24","type":"error"},{"inputs":[],"name":"OverflowUint256ToInt256","type":"error"},{"inputs":[],"name":"OverflowUint256ToUint160","type":"error"},{"inputs":[],"name":"OverflowUint56ToInt56","type":"error"},{"inputs":[],"name":"StalenessToleranceExceeded","type":"error"},{"inputs":[{"internalType":"bytes32","name":"nodeId","type":"bytes32"}],"name":"UnprocessableNode","type":"error"},{"inputs":[{"internalType":"enum ReducerNode.Operations","name":"operation","type":"uint8"}],"name":"UnsupportedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"nodeId","type":"bytes32"},{"indexed":false,"internalType":"enum NodeDefinition.NodeType","name":"nodeType","type":"uint8"},{"indexed":false,"internalType":"bytes","name":"parameters","type":"byte,s"},{"indexed":false,"internalType":"bytes32[]","name":"parents","type":"bytes32[]"}],"name":"NodeRegistered","type":"event"},{"inputs":[{"internalType":"bytes32","name":"nodeId","type":"bytes32"}],"name":"getNode","outputs":[{"components":[{"internalType":"enum NodeDefinition.NodeType","name":"nodeType","type":"uint8"},{"internalType":"bytes","name":"parameters","type":"bytes"},{"internalType":"bytes32[]","name":"parents","type":"bytes32[]"}],"internalType":"struct NodeDefinition.Data","name":"","type":"tuple"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"enum NodeDefinition.NodeType","name":"nodeType","type":"uint8"},{"internalType":"bytes","name":"parameters","type":"bytes"},{"internalType":"bytes32[]","name":"parents","type":"bytes32[]"}],"name":"getNodeId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"nodeId","type":"bytes32"}],"name":"process","outputs":[{"components":[{"internalType":"int256","name":"price","type":"int256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"__slotAvailableForFutureUse1","type":"uint256"},{"internalType":"uint256","name":"__slotAvailableForFutureUse2","type":"uint256"}],"internalType":"struct NodeOutput.Data","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum NodeDefinition.NodeType","name":"nodeType","type":"uint8"},{"internalType":"bytes","name":"parameters","type":"bytes"},{"internalType":"bytes32[]","name":"parents","type":"bytes32[]"}],"name":"registerNode","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"}]
*/